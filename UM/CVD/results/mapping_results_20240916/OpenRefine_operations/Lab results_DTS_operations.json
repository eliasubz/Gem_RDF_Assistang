[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Geboortedatum",
    "expression": "jython:from datetime import datetime\nvalue = datetime.strptime(value, \"%d-%m-%Y\")\nreturn value.strftime(\"%Y-%m-%d\")",
    "onError": "set-to-blank",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Geboortedatum using expression jython:from datetime import datetime\nvalue = datetime.strptime(value, \"%d-%m-%Y\")\nreturn value.strftime(\"%Y-%m-%d\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Naam",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 2,
    "description": "Split column Naam by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Haemoglobin",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "set-to-blank",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Haemoglobin using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Natrium",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Natrium using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Kalium",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Kalium using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Cholesterol",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cholesterol using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LDL",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LDL using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HDL",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HDL using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Kreatinine",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Kreatinine using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "eGFR",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column eGFR using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ASAT",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ASAT using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "CK",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column CK using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "CKMB",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column CKMB using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "CRP",
    "expression": "jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column CRP using expression jython:import re\ntry:\n  res = re.findall(\"\\d+\\.\\d+\", value)[0]\nexcept:\n  res = re.findall(\"\\d+\", value)[0]\nreturn res"
  }
]