Column,Model,ground truth path_id,chosen path_id,is match,first_predicate,first_predicate_output,first_object,first_object_output,second_predicate,second_predicate_output,second_object,second_object_output,third_predicate,third_predicate_output,third_object,third_object_output,HopCount,HopCountoutput,Notes
row_id,gpt_nano,[0],-2,0,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient,https://biomedit.ch/rdf/sphn-ontology/sphn#hasSubjectPseudoIdentifier,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient,https://biomedit.ch/rdf/sphn-ontology/sphn#SubjectPseudoIdentifier,,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDataProviderInstitute,,https://biomedit.ch/rdf/sphn-ontology/sphn#DataProviderInstitute,,,,,1,2,"No direct or indirect ontology path represents a technical row identifier; it is not a biomedical or clinical concept. This column is best handled as an internal database key, not mapped to RDF."
patient_id,gpt_nano,[0],22,0,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient,,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatientIdentifier,,https://biomedit.ch/rdf/sphn-ontology/AIDAVA/PatientIdentifier,,,,,1,2,"The most semantically precise mapping is via AIDAVA:hasPatient (linking ProblemCondition to Patient) and then AIDAVA:hasPatientIdentifier, which is the best match for a patient pseudonym or ID. The alternative would be path 13 (hasSubjectPseudoIdentifier), but 'PatientIdentifier' is clearer for a patient_id."
diagnosis_code,gpt_nano,[4],66,0,https://biomedit.ch/rdf/sphn-ontology/sphn#hasCode,https://biomedit.ch/rdf/sphn-ontology/sphn#hasCode,https://biomedit.ch/rdf/sphn-ontology/sphn#Code,https://biomedit.ch/rdf/sphn-ontology/sphn#Code,,https://biomedit.ch/rdf/sphn-ontology/sphn#hasIdentifier,,http://www.w3.org/2001/XMLSchema#string,,,,,1,2,"Diagnosis codes are best represented by linking to a Code entity and then specifying its identifier. While path 5 (hasCode) could be used directly, the 2-hop path (hasCode/hasIdentifier) is more precise as it places the code in a Code context and extracts the identifier, which matches diagnosis_code."
created_at,gpt_nano,[13],16,0,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDateTime,https://biomedit.ch/rdf/sphn-ontology/sphn#hasRecordDateTime,http://www.w3.org/2001/XMLSchema#dateTime,http://www.w3.org/2001/XMLSchema#dateTime,,,,,,,,,1,1,"created_at refers to the timestamp at which the condition was recorded; path 17 (hasRecordDateTime) directly captures this semantics. The other available datetime paths (14, 16) are less precise: hasDateTime is generic, and hasOnsetDateTime refers to onset, not record."
org_code,gpt_nano,"[78, 7]",78,1,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#DataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#DataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#hasCode,https://biomedit.ch/rdf/sphn-ontology/sphn#hasCode,https://biomedit.ch/rdf/sphn-ontology/sphn#Code,https://biomedit.ch/rdf/sphn-ontology/sphn#Code,,,,,2,2,"org_code is best mapped by linking the ProblemCondition to its DataProviderInstitute and then extracting its code identifier. Among the available institute-related paths, this 2-hop path makes the semantics explicit. The 1-hop path (8: hasDataProviderInstitute) is less specific; 79 goes further to the code identifier."
org_name,gpt_nano,"[80, 7]",80,1,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#hasDataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#DataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#DataProviderInstitute,https://biomedit.ch/rdf/sphn-ontology/sphn#hasName,https://biomedit.ch/rdf/sphn-ontology/sphn#hasName,http://www.w3.org/2001/XMLSchema#string,http://www.w3.org/2001/XMLSchema#string,,,,,2,2,"org_name is the label of the DataProviderInstitute. Path 81 (hasDataProviderInstitute/hasName) is the only path that semantically exposes the institute's name, making it optimal."
