 
# RDF Mapping Assistant for Complex Ontological Relationships

## Objective
Given a CSV dataset and a set of `rdf_types`, identify and rank 15 candidate entities that could serve as an overarching main entity (OAE) connecting all column-level entities in a coherent semantic structure.

## Ontology Metadata
- **Ontology Source**: https://biomedit.ch/rdf/sphn-ontology/sphn

## Task:

1. **Determine the Overarching Main Entity (OAE):**
   - Examine the provided column-level entity candidates and their associated RDF subgraph.
   - Identify whether a single RDF entity could represent the *row* as a whole — that is, an entity for which each column entity can be interpreted as a directly related property, attribute, or part.
   - The OAE should act as the semantic anchor or subject that binds the information from all columns.

2. **Reasoning Criteria:**
   - Think about how each column maps to candidate entities in the ontology.
   - Consider the direct relationships between these candidates and their neighbors in the RDF subgraph.
   - A strong candidate for the OAE will be one that:
     - Has direct or clearly inferred relationships with most or all of the column-level entities.
     - Can semantically contain or contextualize the data represented in the entire row.

3. **Output Format:**
   - Provide a ranked list of the 15 best-fitting candidate OAEs in descending order of suitability.
   - For the top 3 candidates, include a brief justification explaining why the entity is a strong semantic fit.


## Input

1. CSV Data:
### CSV Data (Preview)

| Column Name | Example Values |
|-------------|----------------|
| row_id | 6, 1, 5 |
| patient_id | PAT00006, PAT00001, PAT00005 |
| diagnosis_code | 345678, 567890, 901234 |
| created_at | 2020-01-20 00:00:00, 2022-11-27 00:00:00, 2022-12-29 00:00:00 |
| org_code | ORG001, ORG005, ORG002 |
| org_name | Green Valley Hospital, Health Clinic A, Care Center |

2. URIs of Candidate classes you can choose from:

- https://biomedit.ch/rdf/sphn-ontology/sphn#HealthcareEncounter
- https://biomedit.ch/rdf/sphn-ontology/sphn#AdministrativeCase
- https://biomedit.ch/rdf/sphn-ontology/sphn#ProblemCondition
- https://biomedit.ch/rdf/sphn-ontology/AIDAVA/OncologyDiagnosis
- https://biomedit.ch/rdf/sphn-ontology/AIDAVA/DiagnosticReport

3. All their respective properties you should base your decision on:

### Entity: HealthcareEncounter
- As subject:
  • HealthcareEncounter <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient> <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient>
  • HealthcareEncounter sphn:hasAdministrativeCase sphn:AdministrativeCase
  • HealthcareEncounter sphn:hasCurrentLocation sphn:Location
  • HealthcareEncounter sphn:hasDataFile sphn:DataFile
  • HealthcareEncounter sphn:hasDataProviderInstitute sphn:DataProviderInstitute
  • HealthcareEncounter sphn:hasLocation sphn:Location
  • HealthcareEncounter sphn:hasOriginLocation sphn:Location
  • HealthcareEncounter sphn:hasSubjectPseudoIdentifier sphn:SubjectPseudoIdentifier
  • HealthcareEncounter sphn:hasTargetLocation sphn:Location
  • HealthcareEncounter sphn:hasTherapeuticArea sphn:TherapeuticArea
  • HealthcareEncounter sphn:hasDateTime xsd:dateTime
  • HealthcareEncounter sphn:hasEndDateTime xsd:dateTime
  • HealthcareEncounter sphn:hasIdentifier xsd:string
  • HealthcareEncounter sphn:hasStartDateTime xsd:dateTime

### Entity: AdministrativeCase
- As subject:
  • AdministrativeCase <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient> <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient>
  • AdministrativeCase sphn:hasCareHandling sphn:CareHandling
  • AdministrativeCase sphn:hasDataFile sphn:DataFile
  • AdministrativeCase sphn:hasDataProviderInstitute sphn:DataProviderInstitute
  • AdministrativeCase sphn:hasDischargeLocation sphn:Location
  • AdministrativeCase sphn:hasLocation sphn:Location
  • AdministrativeCase sphn:hasOriginLocation sphn:Location
  • AdministrativeCase sphn:hasSubjectPseudoIdentifier sphn:SubjectPseudoIdentifier
  • AdministrativeCase sphn:hasAdmissionDateTime xsd:dateTime
  • AdministrativeCase sphn:hasDateTime xsd:dateTime
  • AdministrativeCase sphn:hasDischargeDateTime xsd:dateTime
  • AdministrativeCase sphn:hasIdentifier xsd:string

### Entity: ProblemCondition
- As subject:
  • ProblemCondition <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/hasPatient> <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/Patient>
  • ProblemCondition <https://biomedit.ch/rdf/sphn-ontology/AIDAVA/interprets> sphn:Measurement
  • ProblemCondition sphn:hasAdministrativeCase sphn:AdministrativeCase
  • ProblemCondition sphn:hasBodySite sphn:BodySite
  • ProblemCondition sphn:hasCode sphn:Code
  • ProblemCondition sphn:hasCode sphn:Terminology
  • ProblemCondition sphn:hasDataFile sphn:DataFile
  • ProblemCondition sphn:hasDataProviderInstitute sphn:DataProviderInstitute
  • ProblemCondition sphn:hasRelativeTemporalityCode sphn:Code
  • ProblemCondition sphn:hasRelativeTemporalityCode sphn:Terminology
  • ProblemCondition sphn:hasStatusCode sphn:Code
  • ProblemCondition sphn:hasStatusCode sphn:Terminology
  • ProblemCondition sphn:hasSubjectPseudoIdentifier sphn:SubjectPseudoIdentifier
  • ProblemCondition sphn:hasDateTime xsd:dateTime
  • ProblemCondition sphn:hasRecordDateTime xsd:dateTime

### Entity: OncologyDiagnosis

### Entity: DiagnosticReport

## Additional Notes
- Prioritize semantic accuracy over path length
- Consider domain and range constraints of properties
- Account for cardinality constraints in the ontology
- Flag any columns that may require multiple path options

## Example Format

<output>
{"overarching_spanning_entity":"https://example.com#Foo"}
</output>

       

